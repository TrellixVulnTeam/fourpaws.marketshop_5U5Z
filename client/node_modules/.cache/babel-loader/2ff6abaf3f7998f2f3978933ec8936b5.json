{"ast":null,"code":"export default {\n  // called when the user attempts to log in\n  login: ({\n    username\n  }) => {\n    localStorage.setItem('username', username); // accept all username/password combinations\n\n    return Promise.resolve();\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    localStorage.removeItem('username');\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({\n    status\n  }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username');\n      return Promise.reject();\n    }\n\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    return localStorage.getItem('username') ? Promise.resolve() : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve()\n};","map":{"version":3,"sources":["/Users/macbook/Desktop/dogcat/client/src/Pages/AdminPanel/authProvider.js"],"names":["login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","status","reject","checkAuth","getItem","getPermissions"],"mappings":"AAAA,eAAe;AACX;AACAA,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AACrBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,QAAjC,EADqB,CAErB;;AACA,WAAOG,OAAO,CAACC,OAAR,EAAP;AACH,GANU;AAOX;AACAC,EAAAA,MAAM,EAAE,MAAM;AACVJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACA,WAAOH,OAAO,CAACC,OAAR,EAAP;AACH,GAXU;AAYX;AACAG,EAAAA,UAAU,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACxB,QAAIA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AAClCP,MAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACA,aAAOH,OAAO,CAACM,MAAR,EAAP;AACH;;AACD,WAAON,OAAO,CAACC,OAAR,EAAP;AACH,GAnBU;AAoBX;AACAM,EAAAA,SAAS,EAAE,MAAM;AACb,WAAOT,YAAY,CAACU,OAAb,CAAqB,UAArB,IACDR,OAAO,CAACC,OAAR,EADC,GAEDD,OAAO,CAACM,MAAR,EAFN;AAGH,GAzBU;AA0BX;AACAG,EAAAA,cAAc,EAAE,MAAMT,OAAO,CAACC,OAAR;AA3BX,CAAf","sourcesContent":["export default {\n    // called when the user attempts to log in\n    login: ({ username }) => {\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    },\n    // called when the user clicks on the logout button\n    logout: () => {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    },\n    // called when the API returns an error\n    checkError: ({ status }) => {\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    },\n    // called when the user navigates to a new location, to check for authentication\n    checkAuth: () => {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    },\n    // called when the user navigates to a new location, to check for permissions / roles\n    getPermissions: () => Promise.resolve(),\n};"]},"metadata":{},"sourceType":"module"}