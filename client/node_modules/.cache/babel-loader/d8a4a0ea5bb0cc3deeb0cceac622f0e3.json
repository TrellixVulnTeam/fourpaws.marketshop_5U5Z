{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Что-то не так');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  });\n\n  const cleanError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    cleanError\n  };\n};\n\n_s(useHttp, \"MstwQpYZpw83DP6eQvw4fjC0Jxg=\");","map":{"version":3,"sources":["/Users/macbook/Desktop/dogcat/client/src/hooks/http.hooks.js"],"names":["useCallback","useState","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","response","fetch","data","json","ok","Error","message","e","cleanError"],"mappings":";;AAAA,SAAQA,WAAR,EAAqBC,QAArB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMM,OAAO,GAAGP,WAAW,CAAE,OAAOQ,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA2D;AACpF,QAAI;AACD,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAAN,CAA5B;AACC,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,eAA1B,CAAN;AACH;;AACDd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOU,IAAP;AACH,KATD,CASE,OAAOK,CAAP,EAAU;AACRf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACa,CAAC,CAACD,OAAH,CAAR;AACA,YAAMC,CAAN;AACH;AACJ,GAf0B,CAA3B;;AAiBA,QAAMC,UAAU,GAAG,MAAMd,QAAQ,CAAC,IAAD,CAAjC;;AAEA,SAAO;AAACH,IAAAA,OAAD;AAAUI,IAAAA,OAAV;AAAmBF,IAAAA,KAAnB;AAA0Be,IAAAA;AAA1B,GAAP;AACH,CAxBM;;GAAMlB,O","sourcesContent":["import {useCallback, useState} from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {} ) => {\n        try {\n           const response = await fetch(url, {method, body, headers})\n            const data = await response.json()\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Что-то не так')\n            }\n            setLoading(false)\n            return data\n        } catch (e) {\n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    })\n\n    const cleanError = () => setError(null)\n\n    return {loading, request, error, cleanError}\n}"]},"metadata":{},"sourceType":"module"}